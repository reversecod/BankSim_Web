@page
@using Microsoft.AspNetCore.Authorization
@model HomeModel
@attribute [Authorize]
@{
    ViewData["Title"] = "Home";
}
<!DOCTYPE html>
<html lang="pt-br">
<link rel="stylesheet" href="~/css/notificacao.css" />
<head>
    <meta charset="utf-8" />
    <title>Home - BankSim</title>
    <style>
        html, body {
            overflow: auto;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            height: 100%;
        }

        ::-webkit-scrollbar {
            display: none;
        }

        .top-bar {
            width: 100%;
            height: 60px;
            background-color: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
        }

            .top-bar h2 {
                margin: 0;
                color: #2198F4;
            }

        .logo-img {
            height: 2.5rem;
            margin-left: 20px;
        }

        .wrapper {
            display: flex;
            min-height: 100vh;
            padding-top: 60px;
        }

        .sidebar {
            width: 250px;
            background-color: #2198F4;
            color: white;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            position: fixed;
            top: 60px;
            bottom: 0;
            left: 0;
        }

            .sidebar h2 {
                margin: 0 0 20px 0;
                font-size: 24px;
                font-weight: bold;
                text-align: center;
            }

        .info-conta {
            text-align: center;
            margin-bottom: 20px;
            font-size: 16px;
        }

            .info-conta p {
                margin: 4px 0;
            }

        .menu {
            display: flex;
            flex-direction: column;
            width: 100%;
            align-items: center;
        }

            .menu a {
                margin: 6px 0;
                width: 90%;
                color: white;
                text-decoration: none;
                font-size: 18px;
                text-align: center;
                padding: 10px;
                border-radius: 5px;
                transition: background-color 0.3s;
            }

                .menu a:hover {
                    background-color: #1a7ed0;
                }

        .logout {
            margin-top: auto;
            color: red;
            font-weight: bold;
            text-decoration: none;
        }

        .content {
            flex: 1;
            background-color: #f0f2f5;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 40px;
            margin-left: 250px;
            width: 100%;
        }

            .content h1 {
                font-size: 36px;
                color: #2198F4;
            }

        .data-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }

            .data-controls a {
                font-size: 16px;
                text-decoration: none;
                padding: 6px 12px;
                background-color: #2198F4;
                color: white;
                border-radius: 6px;
            }

        .data-wrapper {
            position: absolute;
            top: 70px;
            right: 30px;
        }

        .data-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .data-box {
            background-color: rgba(255, 255, 255, 0.6);
            padding: 8px 12px;
            border-radius: 8px;
            font-size: 1.1rem;
            color: #000;
            min-width: 190px;
            text-align: center;
            font-weight: 500;
        }

        .btn-avancar {
            font-size: 16px;
            text-decoration: none;
            padding: 8px 14px;
            background-color: #2198F4;
            color: white;
            border-radius: 6px;
            transition: background-color 0.3s;
        }

            .btn-avancar:hover {
                background-color: #1a7ed0;
            }

        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 2000;
        }

        .modal-content {
            background-color: white;
            border-radius: 12px;
            padding: 30px;
            width: 400px;
            max-width: 90%;
            box-shadow: 0 0 20px rgba(0,0,0,0.2);
            text-align: center;
            color: #333;
            position: relative;
        }

            .modal-content h2 {
                margin-top: 0;
                color: #2198F4;
                font-size: 24px;
            }

            .modal-content button {
                margin-top: 20px;
                padding: 10px 20px;
                background-color: #2198F4;
                color: white;
                border: none;
                border-radius: 6px;
                cursor: pointer;
                font-size: 16px;
            }

                .modal-content button:hover {
                    background-color: #1976c5;
                }

        .toast-notificacao {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #2198F4;
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.25);
            z-index: 9999;
            animation: aparecer 0.5s ease, desaparecer 0.5s ease 3s forwards;
        }

        .btn-fechar-x {
            position: absolute;
            top: 12px;
            right: 16px;
            background: none;
            border: none;
            font-size: 28px;
            font-weight: bold;
            color: #444;
            cursor: pointer;
            line-height: 1;
        }

            .btn-fechar-x:hover {
                color: #000;
            }
    </style>
</head>
<body>
    <div class="top-bar">
        <a asp-page="/Home">
            <img src="~/img/logoBKS.png" alt="Logo BankSim" class="logo-img" />
        </a>
    </div>

    <div class="wrapper">
        <div class="sidebar">
            <div class="info-conta">
                <p><strong>Saldo:</strong> R$ @Model.Saldo.ToString("F2")</p>
                <p>
                    <strong>Limite Disponível:</strong>
                    <span style="cursor:pointer; text-decoration: underline;" onclick="abrirModal()">
                        R$ @Model.LimiteCreditoDisponivel.ToString("F2")
                    </span>
                </p>
            </div>

            <div class="menu">
                <a asp-page="/Deposito/Deposito">Depósito</a>
                <a asp-page="/Transferencia/Transferencia">Transferência</a>
                <a asp-page="/Emprestimo/Emprestimo">Empréstimo</a>
                <a asp-page="/Faturas/Faturas">Faturas</a>
                <a asp-page="/Caixinha/Caixinha">Caixinha</a>
                <a asp-page="/Extrato/Extrato">Extrato</a>
                <a asp-page="/Anotacao/Anotacoes">Anotações</a>
                <a asp-page="/Calendario/Calendario">Calendário</a>
            </div>

            <a asp-page="/Logout" class="logout">Sair</a>
        </div>

        <div class="content">
            <h1>BankSim</h1>
            @if (TempData["LembreteMensagem"] != null)
            {
                <div id="modalLembrete" class="modal-overlay">
                    <div class="modal-content">
                        <h2>Lembrete</h2>
                        <strong>@TempData["LembreteMensagem"]</strong>
                        <p>@TempData["LembreteDescricao"]</p>
                        <button onclick="fecharModalLembrete()">Fechar</button>
                    </div>
                </div>
            }
            @if (TempData["DepositoTitulo"] != null)
            {
                <div id="modalLembrete" class="modal-overlay">
                    <div class="modal-content">
                        <h2>Evento</h2>
                        <strong>Depósito agendado realizado no valor de R$@TempData["DepositoValor"]</strong>
                        <p>@TempData["DepositoDescricao"]</p>
                        <button onclick="fecharModalLembrete()">Fechar</button>
                    </div>
                </div>
            }
            @if (TempData["TransferenciaTitulo"] != null)
            {
                var titulo = TempData["TransferenciaTitulo"]?.ToString();
                var descricao = TempData["TransferenciaDescricao"]?.ToString();
                var valor = TempData["TransferenciaValor"]?.ToString();

                var isErro = titulo != null && titulo.Contains("bloqueada", StringComparison.OrdinalIgnoreCase);
                var corHeader = isErro ? "red" : "#2198F4";
                var tituloModal = isErro ? "Erro na Transferência" : "Transferência Efetuada";
                var descricaoFormatada = isErro ? descricao : $"Transferência agendada realizada no valor de R$ {TempData["TransferenciaValor"]}";

                <div id="modalLembrete" class="modal-overlay">
                    <div class="modal-content">
                        <h2 style="color: @corHeader;">@tituloModal</h2>
                        <p>@descricaoFormatada</p>
                        <button onclick="fecharModalLembrete()">Fechar</button>
                    </div>
                </div>
            }
        </div>

        <div id="modalRedefinirLimite" class="modal-overlay">
            <div class="modal-content">
                <form method="post">
                    <h2 style="color: #2198F4;">Redefinir Limite de Crédito</h2>
                    <p>Limite atual: <strong>R$ @Model.LimiteCreditoDisponivel.ToString("F2")</strong></p>

                    <div style="display: flex; align-items: center; gap: 5px; margin-top: 15px;">
                        <span style="font-size: 16px;">R$</span>
                        <input asp-for="NovoLimite" type="number" min="0"
                               style="flex: 1; padding: 10px; font-size: 16px;" placeholder="Novo limite" />
                    </div>

                    @if (!ViewData.ModelState.IsValid)
                    {
                        foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <p style="color:red; margin-top:10px;">@error.ErrorMessage</p>
                        }
                    }

                    <div style="display: flex; justify-content: space-between; gap: 10px; margin-top: 20px;">
                        <button type="submit" style="flex: 1; background-color: #2198F4; color: white; padding: 10px 0; border: none; border-radius: 6px; font-size: 16px; cursor: pointer;">
                            Confirmar
                        </button>
                        <button type="button" onclick="fecharModalLimite()" style="flex: 1; background-color: #dc3545; color: white; padding: 10px 0; border: none; border-radius: 6px; font-size: 16px; cursor: pointer;">
                            Cancelar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="data-wrapper">
        <div class="data-controls">
            @{
                var dataFormatada = Model.DataSimulada.ToString("dd/MM/yyyy");
                var nomeDiaSemana = new DateTime(Model.DataSimulada.Year, Model.DataSimulada.Month, Model.DataSimulada.Day)
                .ToString("dddd", new System.Globalization.CultureInfo("pt-BR"));
                var nomeDiaSemanaCapitalizado = System.Globalization.CultureInfo
                .GetCultureInfo("pt-BR")
                .TextInfo
                .ToTitleCase(nomeDiaSemana);
            }

            <div class="data-box">
                @dataFormatada - <span style="font-weight:600;">@nomeDiaSemanaCapitalizado</span>
            </div>

            <button onclick="abrirModalNotificacoes()" style="background: none; border: none; cursor: pointer;">
                <img src="~/img/notification-bell.png" alt="Notificações" style="width: 28px;" />
            </button>

            <a class="btn-avancar" id="btnAvancarDia" href="@Url.Page("/Home", new { AcaoData = "avancar" })">Avançar Dia</a>
        </div>
    </div>
    @if (Model.Notificacoes != null && Model.Notificacoes.Any())
{
    <div id="modalNotificacoes" class="modal-overlay">
        <div class="modal-content" style="text-align: left; max-height: 80vh; overflow-y: auto;">
            <h2>Notificações</h2>
            @foreach (var n in Model.Notificacoes.OrderByDescending(n => n.DataNotificacao))
            {
                <div style="margin-bottom: 15px; border-bottom: 1px solid #ccc; padding-bottom: 10px;">
                    <strong>@n.Titulo</strong><br />
                    <p>@n.Mensagem</p>
                </div>
            }
                <button onclick="fecharModalNotificacoes()" class="btn-fechar-x" aria-label="Fechar">×</button>
        </div>
    </div>
}
else
{
    <div id="modalNotificacoes" class="modal-overlay">
        <div class="modal-content">
            <h2>Notificações</h2>
            <p>Nenhuma notificação encontrada.</p>
            <button onclick="fecharModalNotificacoes()">Fechar</button>
        </div>
    </div>
}
    @if (TempData["NovaNotificacao"] != null)
    {
        <div id="toast-notificacao" class="toast-notificacao">
            <p>🔔 Nova notificação recebida</p>
        </div>
        TempData.Remove("NovaNotificacao"); 
    }
    <script>
             window.onload = function () {
            const modal = document.getElementById("modalLembrete");
            const btnAvancar = document.getElementById("btnAvancarDia");

            if (modal) {
                modal.style.display = "flex";

                // Desabilita botão enquanto o modal estiver aberto
                btnAvancar.onclick = function (e) {
                    e.preventDefault();
                    alert("Você precisa fechar a mensagem antes de avançar o dia.");
                };
            }
        };

        function fecharModalLembrete() {
            const modal = document.getElementById("modalLembrete");
            const btnAvancar = document.getElementById("btnAvancarDia");

            modal.style.display = "none";

            // Ativa o botão após fechar o modal
            btnAvancar.onclick = null;
        }

        function abrirModal() {
            document.getElementById("modalRedefinirLimite").style.display = "flex";
        }

        function fecharModalLimite() {
            document.getElementById("modalRedefinirLimite").style.display = "none";
        }

        function abrirModalNotificacoes() {
            document.getElementById("modalNotificacoes").style.display = "flex";
        }

        function fecharModalNotificacoes() {
            document.getElementById("modalNotificacoes").style.display = "none";
        }
    </script>
</body>
</html>
